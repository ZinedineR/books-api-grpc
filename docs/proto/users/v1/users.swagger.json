{
  "swagger": "2.0",
  "info": {
    "title": "User Service",
    "description": "to handle user service",
    "version": "v1"
  },
  "tags": [
    {
      "name": "proto.users.v1.UserService"
    }
  ],
  "host": "localhost:8080",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/auth/login": {
      "post": {
        "summary": "Login a user and return a JWT token",
        "operationId": "Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/proto.users.v1.LoginResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "register to user with username and password",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/proto.users.v1.LoginRequest"
            }
          }
        ],
        "tags": [
          "proto.users.v1.UserService"
        ]
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "summary": "Register a new user",
        "operationId": "Register",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/proto.users.v1.RegisterResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "register to user with username and password",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/proto.users.v1.RegisterRequest"
            }
          }
        ],
        "tags": [
          "proto.users.v1.UserService"
        ]
      }
    },
    "/api/v1/users": {
      "get": {
        "summary": "Find a list of users with pagination",
        "operationId": "Find",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/proto.users.v1.GetAllUserResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "description": "Page number for pagination",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Number of items per page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter",
            "description": "Filter criteria for users",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "description": "Sorting criteria",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "proto.users.v1.UserService"
        ]
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "summary": "Get user details by ID",
        "operationId": "Detail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/proto.users.v1.GetUserByIDResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "User ID for details retrieval",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "proto.users.v1.UserService"
        ]
      }
    }
  },
  "definitions": {
    "proto.users.v1.GetAllUserResponse": {
      "type": "object",
      "properties": {
        "pagination": {
          "title": "Pagination data",
          "allOf": [
            {
              "$ref": "#/definitions/proto.users.v1.PaginationResponse"
            }
          ]
        },
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/proto.users.v1.User"
          },
          "title": "List of user entities"
        },
        "response": {
          "title": "General mutation response",
          "allOf": [
            {
              "$ref": "#/definitions/proto.users.v1.MutationResponse"
            }
          ]
        }
      },
      "title": "Response message for retrieving a paginated list of users"
    },
    "proto.users.v1.GetUserByIDResponse": {
      "type": "object",
      "properties": {
        "user": {
          "title": "Detailed user information",
          "allOf": [
            {
              "$ref": "#/definitions/proto.users.v1.User"
            }
          ]
        }
      },
      "title": "Response message for retrieving a specific user by ID"
    },
    "proto.users.v1.LoginRequest": {
      "type": "object",
      "example": {
        "username": "john_doe",
        "password": "Password!1"
      },
      "properties": {
        "username": {
          "type": "string",
          "title": "Username for login"
        },
        "password": {
          "type": "string",
          "title": "Password for login"
        }
      },
      "description": "register to user with username and password",
      "title": "Registering new user",
      "required": [
        "username",
        "password"
      ]
    },
    "proto.users.v1.LoginResponse": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "Username of the logged-in user"
        },
        "token": {
          "type": "string",
          "title": "JWT token"
        }
      },
      "title": "Response message for successful user login"
    },
    "proto.users.v1.MutationResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "title": "Success or error message"
        }
      },
      "title": "Mutation response for tracking success messages on operations"
    },
    "proto.users.v1.PaginationResponse": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32",
          "title": "Current page"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "title": "Page size"
        },
        "totalPages": {
          "type": "string",
          "format": "int64",
          "title": "Total pages available"
        },
        "totalRows": {
          "type": "string",
          "format": "int64",
          "title": "Total number of rows"
        }
      },
      "title": "Pagination response for paginated requests"
    },
    "proto.users.v1.RegisterRequest": {
      "type": "object",
      "example": {
        "username": "john_doe",
        "password": "Password!1"
      },
      "properties": {
        "username": {
          "type": "string",
          "title": "Username for registration"
        },
        "password": {
          "type": "string",
          "title": "Password for registration"
        }
      },
      "description": "register to user with username and password",
      "title": "Registering new user",
      "required": [
        "username",
        "password"
      ]
    },
    "proto.users.v1.RegisterResponse": {
      "type": "object",
      "properties": {
        "user": {
          "title": "Registered user data",
          "allOf": [
            {
              "$ref": "#/definitions/proto.users.v1.User"
            }
          ]
        },
        "response": {
          "title": "General mutation response",
          "allOf": [
            {
              "$ref": "#/definitions/proto.users.v1.MutationResponse"
            }
          ]
        }
      },
      "title": "Response message for successful user registration"
    },
    "proto.users.v1.User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "User ID"
        },
        "username": {
          "type": "string",
          "title": "Username"
        },
        "password": {
          "type": "string",
          "title": "Hashed password"
        }
      },
      "title": "User message that represents user entity"
    }
  }
}
