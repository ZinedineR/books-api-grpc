// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ExampleSvcExternal is an autogenerated mock type for the ExampleSvcExternal type
type ExampleSvcExternal struct {
	mock.Mock
}

// Post provides a mock function with given fields:
func (_m *ExampleSvcExternal) Post() (interface{}, int, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Post")
	}

	var r0 interface{}
	var r1 int
	var r2 error
	if rf, ok := ret.Get(0).(func() (interface{}, int, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	if rf, ok := ret.Get(1).(func() int); ok {
		r1 = rf()
	} else {
		r1 = ret.Get(1).(int)
	}

	if rf, ok := ret.Get(2).(func() error); ok {
		r2 = rf()
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// NewExampleSvcExternal creates a new instance of ExampleSvcExternal. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewExampleSvcExternal(t interface {
	mock.TestingT
	Cleanup(func())
}) *ExampleSvcExternal {
	mock := &ExampleSvcExternal{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
