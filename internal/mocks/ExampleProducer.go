// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	model "books-api/internal/model"
)

// ExampleProducer is an autogenerated mock type for the ExampleProducer type
type ExampleProducer struct {
	mock.Mock
}

// GetTopic provides a mock function with given fields:
func (_m *ExampleProducer) GetTopic() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetTopic")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Send provides a mock function with given fields: ctx, order
func (_m *ExampleProducer) Send(ctx context.Context, order ...*model.ExampleMessage) error {
	_va := make([]interface{}, len(order))
	for _i := range order {
		_va[_i] = order[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for Send")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, ...*model.ExampleMessage) error); ok {
		r0 = rf(ctx, order...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewExampleProducer creates a new instance of ExampleProducer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewExampleProducer(t interface {
	mock.TestingT
	Cleanup(func())
}) *ExampleProducer {
	mock := &ExampleProducer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
